variables:
  GIT_DEPTH: 10
  DEPS: >
    build-essential gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf make device-tree-compiler
    bison flex bc libssl-dev
  WORKING_DIR: $CI_PROJECT_DIR/debian/output

before_script:
  - echo "man-db man-db/auto-update boolean false" | debconf-set-selections
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get -y update
  - apt-get -y build-dep .
  - apt-get -y install build-essential devscripts

.tags: &tags
  tags:
    - librem5

build:aarch64:
  <<: *tags
  stage: build
  allow_failure: true
  variables:
    CROSS_BUILD: "ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-"
  script:
    - make      ${CROSS_BUILD} librem5_defconfig
    - KCFLAGS="-Werror" make -j 4 ${CROSS_BUILD} Image dtbs modules
    - make -j 4 ${CROSS_BUILD} INSTALL_MOD_PATH=modules/ modules_install
  artifacts:
    paths:
      - arch/arm64/boot/Image
      - arch/arm64/boot/dts/freescale/imx8mq-librem5*.dtb
      - modules/
    expire_in: 1 week

build:deb:
  tags:
    - librem5:arm64
  stage: build
  script:
    - git clean -dfx
    - git checkout -f
    - rm -f ../* || true
    - rm -rf "${WORKING_DIR}"; mkdir -p "${WORKING_DIR}"
    - debian/rules debian/control
    - dch -l +gitlabci "Gitlab ci build of ${CI_COMMIT_SHA}"
    - dpkg-buildpackage -j4 -uc -us -B  --host-arch=arm64
    - cp -l ../*.deb ../*.changes ../*.buildinfo "${WORKING_DIR}/"
  artifacts:
    paths:
      - "${WORKING_DIR}"
    expire_in: 1 week
